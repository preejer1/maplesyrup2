<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- UserMapper.xml :: SQL 를 갖는 MetaData - MyBatis Framework 은 XML MetaData 
	를 사용 SQL구문을 관리 (SQL은 xml 을 통해 적절히 캡슐화 되어 애플리케이선 외부로 분리함) - SQL문의 입력(?) / 
	출력(?)을 매핑한다. <== 아래의 select element 참조 -->

<mapper namespace="UserMapper">

	<resultMap id="userSelectMap" type="com.model2.mvc.service.domain.User">
		<result property="userId" 	column="user_id" 		jdbcType="VARCHAR"/>
		<result property="userNo"	column="user_no" 	    jdbcType="INTEGER" />
		<result property="userName" column="user_name"     	jdbcType="VARCHAR" />
		<result property="password" column="password" 	    jdbcType="VARCHAR" />
		<result property="phone" 	column="phone"		 	jdbcType="VARCHAR" />
		<result property="sex"  	column="sex" 			jdbcType="VARCHAR" />
		<result property="regDate" 	column="reg_date"		jdbcType="DATE" />
		<result property="role"   	column="role" 			jdbcType="VARCHAR" />
		<result property="addr"   	column="addr" 			jdbcType="VARCHAR" />
	</resultMap>


	<insert id="addUser" parameterType="com.model2.mvc.service.domain.User">
		INSERT
		INTO
		users(user_Id,user_No,user_Name,password,phone,sex,reg_Date,role,addr)
		VALUES(#{userId},user_no.NEXTVAL,#{userName},#{password},#{phone},#{sex},sysdate,'user',#{addr})
	</insert>

	<select id="getUser" parameterType="String" resultMap="userSelectMap">
		SELECT
		*
		FROM users
		WHERE user_id = #{value}
	</select>
	
	<select id="getCheck" parameterType="string" resultMap="userSelectMap">
		SELECT
		user_Id
		FROM users
		WHERE user_Id = #{value}
	</select>




	<update id="updateUser" parameterType="com.model2.mvc.service.domain.User" >
	  	UPDATE users
	  	<set>
	  		user_name 	= #{userName:VARCHAR},
			addr 		= #{addr:VARCHAR},
			phone		= #{phone:VARCHAR},
			sex		= #{sex:VARCHAR}
	  	</set>
	  	WHERE user_id = #{userId}
	</update>


	<delete id="removeUser" parameterType="string">
		DELETE
		FROM users
		WHERE
		user_id=#{value}
	</delete>

	<select id="getTotalCount" parameterType="com.model2.mvc.common.Search" resultType="int">
		SELECT COUNT(*)
		FROM( SELECT user_id , user_name , email
		FROM users
		<if test="searchCondition != null">
			<where>
				<if test="searchCondition == 0 and searchKeyword !='' ">
					user_id LIKE '%'||#{searchKeyword}||'%'
				</if>
				<if test="searchCondition == 1 and searchKeyword !='' ">
					user_name LIKE '%'||#{searchKeyword}||'%'
				</if>
			</where>
		</if>
		) countTable
	</select>
	
	<select id="getUserList" parameterType="com.model2.mvc.common.Search" resultMap="userSelectMap">
		SELECT *
		FROM ( SELECT inner_table.* , ROWNUM AS row_seq
		FROM ( SELECT user_id , user_name , email
		FROM users
		<if test="searchCondition != null">
			<where>
				<if test="searchCondition == 0 and searchKeyword !='' ">
					user_id LIKE '%'||#{searchKeyword}||'%'
				</if>
				<if test="searchCondition == 1 and searchKeyword !='' ">
					user_name LIKE '%'||#{searchKeyword}||'%'
				</if>
			</where>
		</if>
		ORDER BY user_id ) inner_table
		WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND
		#{endRowNum}
	</select>
	
	
   <select  id="findUserId"  parameterType="com.model2.mvc.service.domain.User"  resultMap="userSelectMap">
    SELECT
    user_Id, user_Name
    FROM users 
    WHERE user_Name = #{userName}
    and   phone = #{phone}
   </select>
 
  <update id="updatePassword" parameterType="com.model2.mvc.service.domain.User">
    UPDATE users
    <set>
      password = #{password} 
    
    </set>
    WHERE user_Id = #{userId}
  </update>
   
    <!-- SQL : getUserInfo -->
  <select id="getUserInfo" parameterType="com.model2.mvc.service.domain.User" resultMap="userSelectMap">
    SELECT
    user_id , user_no, user_name , password , sex,  phone , addr , role , 
    reg_date
    FROM users
    WHERE user_id = #{userId}
  </select>
  
 <select id="getUserForNo" parameterType="Integer" resultMap="userSelectMap">
	SELECT
	*
	FROM users
	WHERE user_no = #{userNo}
	</select>

	<select id="getUserNoForAuctionNo" parameterType="Integer" resultType="int">
		select user_no
		from auction
		where auction_no = ${value}
	</select>
</mapper>